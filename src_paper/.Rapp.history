gamma
rm(list=ls())
Rtoolsdir = "~/Dropbox/Rtools/"#
#
library(fields)#
library(ncdf4)#
source(paste(Rtoolsdir,"thermo_tools.R",sep=""))#
source(paste(Rtoolsdir,"rfm_tools.R",sep=""))#
source(paste(Rtoolsdir,"plot_tools.R",sep=""))#
source(paste(Rtoolsdir,"my_image_plot.R",sep=""))#
load("~/Dropbox/17rad_cooling2/data/band_data.Rdata")  # includes ncoarse
# Data params#
cases     = c("h2o_only_no_cont","co2_only_simple_atm")#
Ncase     = length(cases)#
lapse	  = 7e-3  # K/m#
RH	      = 0.75#
#
# Plot params#
plim      = c(1000,1) # hPa#
pfac      = 1e-2        # SI to hPa#
lntau_lim = c(-20,20)#
cex	      = 1#
#ncoarse   = 10
i=1
case  = cases[i]
gas     = substr(case,1,3)      #
        m_mol   = eval(as.name(paste("m_",gas,sep=""))) #
        ncpath  = paste("~/Dropbox/17rad_cooling2/data/",case,".nc",sep="")#
        nc      = nc_open(ncpath)#
        k       = ncvar_get(nc,"k")#
        dk      = k[2]-k[1]#
        p       = ncvar_get(nc,"p")#
        tabs    = ncvar_get(nc,"tabs")#
        q       = ncvar_get(nc,paste("q_",gas,sep=""))#
        np      = length(p)#
        p_vec   = (np-1):1#
        nk      = length(k)#
        tau_rfm = ncvar_get(nc,"opt")   # no D!
band_data_gas    = band_data[[gas]]
j=1
data = band_data_gas[[j]]#
               for (var in c("k_fit","kappa_fit","lk","ivec")){#
                        assign(var,data[[var]])#
                }
k_fit
band_data_gas[[1]]$k_fit
k_fit = c(band_data_gas[[1]]$k_fit,band_data_gas[[2]]$k_fit)
k_fit
k_fit = c(band_data_gas[[1]]$k_fit,band_data_gas[[2]]$k_fit[-1])
k_fit
band_data_gas = band_data[[gas]]#
			rot_data      = band_data_gas[[1]]#
			vr_data       = band_data_gas[[2]]
kappa_rot     = rot_data$kappa_fit
kappa_rot
k_rot	      = min(rot_data$k_fit)
k_rot
l_rot	      = rot_data$lk
l_rot
k_vr	      = max(vr_data$k_fit)#
			kappa_vr      = max(vr_data$kappa_fit)#
			l_vr	      = vr_data$lk
k_vr
l_vr
kappa_vr
k_fit_rot     = rot_data$k_fit
k_fit_rot
k_rot	      = min(k_fit_rot)
k_rot
k_fit_vr      = vr_data$k_fit#
			k_vr	      = max(k_fit_vr)
k_fit_vr
k_vr
kappa_theory  = c(kappa_rot*exp(-abs(k_fit_rot -k_rot)/l_rot),#
							  kappa_vr*exp(-abs(k_fit_vr[-1] -k_vr)/l_vr))
plot(k_fit_rot,k_fit_vr[-1],kappa_theory,type="l")
plot(c(k_fit_rot,k_fit_vr[-1]),kappa_theory,type="l")
plot(c(k_fit_rot,k_fit_vr[-1]),kappa_theory,type="l",log="y")
k_rot
kappa_rot
band_data_gas = band_data[[gas]]#
			rot_data      = band_data_gas[[1]]#
			vr_data       = band_data_gas[[2]]#
			k_fit_rot     = rot_data$k_fit#
			k_rot	      = min(k_fit_rot)#
			kappa_rot     = max(rot_data$kappa_fit)#
			l_rot	      = rot_data$lk#
			k_fit_vr      = vr_data$k_fit#
			k_vr	      = max(k_fit_vr)#
			kappa_vr      = max(vr_data$kappa_fit)#
			l_vr	      = vr_data$lk#
			kappa_theory  = c(kappa_rot*exp(-abs(k_fit_rot -k_rot)/l_rot),#
							  kappa_vr*exp(-abs(k_fit_vr[-1] -k_vr)/l_vr))
plot(c(k_fit_rot,k_fit_vr[-1]),kappa_theory,type="l",log="y")
einf
tabs
gamma
WVP0	  = RH*einf*Tav/L/Gamma
Ncase     = length(cases)#
Gamma	  = 7e-3  # K/m#
RH	      = 0.75#
pref	  = 1e5   # Pa, 1 atm#
Tav	      = 250   # K#
WVP0	  = RH*einf*Tav/L/Gamma
WVP0
tau_theory    = kappa_theory%o%(ps/pref*(tabs/Ts)^(g/Rd/Gamma)*WVP0*exp(-L/Rv/tabs))
Ts	    = tabs[1]
kappa_theory  = c(kappa_rot*exp(-abs(k_fit_rot -k_rot)/l_rot),#
							  kappa_vr*exp(-abs(k_fit_vr[-1] -k_vr)/l_vr))#
 			tau_theory    = kappa_theory%o%(ps/pref*(tabs/Ts)^(g/Rd/Gamma)*WVP0*exp(-L/Rv/tabs))
k_coarse
load("~/Dropbox/17rad_cooling2/data/band_data.Rdata")  # includes ncoarse
k_coarse
k_coarse	  = c(k_fit_rot,k_fit_vr[-1])
k_coarse
dim(tau_theory)
gas
band_data_gas = band_data[[gas]]#
			rot_data      = band_data_gas[[1]]#
			vr_data       = band_data_gas[[2]]#
			k_fit_rot     = rot_data$k_fit#
			k_rot	      = min(k_fit_rot)#
			kappa_rot     = max(rot_data$kappa_fit)#
			l_rot	      = rot_data$lk#
			k_fit_vr      = vr_data$k_fit#
			k_vr	      = max(k_fit_vr)#
			kappa_vr      = max(vr_data$kappa_fit)#
			l_vr	      = vr_data$lk#
			k_coarse	  = c(k_fit_rot,k_fit_vr[-1])#
			kappa_theory  = c(kappa_rot*exp(-abs(k_fit_rot -k_rot)/l_rot),#
							  kappa_vr*exp(-abs(k_fit_vr[-1] -k_vr)/l_vr))#
 			tau_theory    = kappa_theory%o%(ps/pref*(tabs/Ts)^(g/Rd/Gamma)*WVP0*exp(-L/Rv/tabs))
dim(tau_theory)
length(k_coarse)
tau_rfm = coarse_grain(ncvar_get(nc,"opt"),ncoarse)   # no D!
dim(tau_rfm)
ncoarse
k_coarse   = coarse_grain(k,ncoarse)
k_coarse
length(k_coarse)
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
source("/var/folders/xv/pk4smw951250ym9j1zcspktm0000gq/T//RtmpGoszQ8/file3a3605b83f3")#
unlink("/var/folders/xv/pk4smw951250ym9j1zcspktm0000gq/T//RtmpGoszQ8/file3a3605b83f3")
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
coarse_grain
running_mean
rfm_lni2s
p       = ncvar_get(nc,"p")#
		p_s	    = rfm_lni2s(p)#
        tabs    = ncvar_get(nc,"tabs")#
		Ts	    = tabs[1]#
        q       = ncvar_get(nc,paste("q_",gas,sep=""))#
        np      = length(p)#
        p_vec   = (np-1):1#
		opt     = ncvar_get(nc,"opt")#
 		opt_s   = rfm_lni2s(opt)#
        tau_rfm = coarse_grain(opt,ncoarse)   # no D!#
        tau_rfm_s = coarse_grain(opt_s,ncoarse)   # no D!
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
source("/Users/nadir/Dropbox/16rad_cooling/git/src_paper/plot_fnetvar_amip4K.R")
Ts
source("/Users/nadir/Dropbox/16rad_cooling/git/src_paper/plot_pptfnet_tinv_dam.R")
source("/Users/nadir/Dropbox/16rad_cooling/git/src_paper/plot_pptfnet_tinv_dam.R")
rm(list=ls())
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
dim(tau_rfm)
length(k_fit)
length(k_coarse)
tau_rfm[75,]
i
case
gas     = substr(case,1,3)	#
	m_mol   = eval(as.name(paste("m_",gas,sep="")))	#
	ncpath  = paste("~/Dropbox/17rad_cooling2/data/",case,".nc",sep="")#
	nc      = nc_open(ncpath)#
	k       = ncvar_get(nc,"k")#
	dk      = k[2]-k[1]#
	p       = ncvar_get(nc,"p")#
	z       = ncvar_get(nc,"z")#
	y  	    = eval(as.name(ycoord))#
	tabs    = ncvar_get(nc,"tabs")#
	q       = ncvar_get(nc,paste("q_",gas,sep=""))#
	rho_gas = p/Rd/tabs*q#
	path    = round(rfm_i2s(rho_gas)%*%diff(z),digits=1)#
	np      = length(p)#
	p_vec	= (np-1):1#
	z_vec   = 1:(np-1)#
	y_vec   = eval(as.name(paste(ycoord,"_vec",sep="")))#
	nk      = length(k)#
	coo2d   = ncvar_get(nc,"coo")/abs(coo_fac)         # convert to SI #
	opt     = D*ncvar_get(nc,"opt")
Rtoolsdir = "~/Dropbox/Rtools/"#
#
library(fields)#
library(ncdf4)#
source(paste(Rtoolsdir,"thermo_tools.R",sep=""))#
source(paste(Rtoolsdir,"rfm_tools.R",sep=""))#
source(paste(Rtoolsdir,"my_image_plot.R",sep=""))#
#
# Data params#
cases	  = c("h2o_only_no_cont","co2_only_simple_atm")#
Ncase     = length(cases)#
D         = 1.5  # diffusion parameter#
Nsec      = 3600*24   # sec/day#
coo_fac   = -g/Cp*Nsec*1e2  # pppf to K/day/cm^-1 heating#
cts_fac   = coo_fac         # pppf to K/day/cm^-1 heating#
lntau_fac = 1 #
fac1d	  = -g/Cp*Nsec      # pppf to K/day#
#
# Plot params#
# y coord#
k_lim	   = c(100,1500) # cm^-1  #
k_lab	   = expression(k~~"("*c*m^{-1}*")")#
p_lim      = c(1000,1) # hPa#
p_lab      = "p (hPa)"#
p_fac	   = 1e-2        # SI to hPa#
z_lim      = c(1,30)     # km#
z_lab      = "z (km)"#
z_fac	   = 1e-3	     # SI to km#
ycoord     = "p"#
for (var in c("lim","lab","fac")){#
	assign(paste("y_",var,sep=''),eval(as.name(paste(ycoord,"_",var,sep=''))))#
}#
#
# fields#
fields 	    = c("coo","cts","lntau")#
fields1d    = c("coo","cts")#
coo_lim     = c(-0.010,0.010) # K/day/cm^-1#
cts_lim     = coo_lim#
lntau_lim   = c(-20,20)#
coo_units   = "(K/day/cm^-1)"#
cts_units   = coo_units#
lntau_units = ""#
coo1d_lims  = list(c(-2.5,0),c(-0.75,0.1))   # K/day#
#
kappa_lab   = expression(kappa[ref]~~"("*m^2/kg*")")#
kappa_lim   = c(1e-4,1e4) #
Ncol	    = 2^6#
colvec      = c(two.colors(round(-Ncol*coo_lim[1]/(coo_lim[2]-coo_lim[1])),#
			   			  start='darkblue',middle='blue',end='white'), #
               two.colors(round(Ncol*coo_lim[2]/(coo_lim[2]-coo_lim[1])),#
               			  start='white',middle='red',end='darkred') )#
cex	       = 2.25#
cex_leg    = 2#
lwd        = 2#
ltyvec     = c("solid","dashed")#
#
nrun   	   = 10  # every 10 cm^-1#
ncoarse	   = 10
gas     = substr(case,1,3)	#
	m_mol   = eval(as.name(paste("m_",gas,sep="")))	#
	ncpath  = paste("~/Dropbox/17rad_cooling2/data/",case,".nc",sep="")#
	nc      = nc_open(ncpath)#
	k       = ncvar_get(nc,"k")#
	dk      = k[2]-k[1]#
	p       = ncvar_get(nc,"p")#
	z       = ncvar_get(nc,"z")#
	y  	    = eval(as.name(ycoord))#
	tabs    = ncvar_get(nc,"tabs")#
	q       = ncvar_get(nc,paste("q_",gas,sep=""))#
	rho_gas = p/Rd/tabs*q#
	path    = round(rfm_i2s(rho_gas)%*%diff(z),digits=1)#
	np      = length(p)#
	p_vec	= (np-1):1#
	z_vec   = 1:(np-1)#
	y_vec   = eval(as.name(paste(ycoord,"_vec",sep="")))#
	nk      = length(k)#
	coo2d   = ncvar_get(nc,"coo")/abs(coo_fac)         # convert to SI #
	opt     = D*ncvar_get(nc,"opt")#
	flx2d   = ncvar_get(nc,"flx")*1e-2          # W/m^2/m^-1#
	kappa   = ncvar_get(nc,"sigma",start=c(1,1),count=c(nk,1))*N_avo/m_mol # m^2/kg
dim(opt)
opt_rfm = coarse_grain(opt,ncoarse)
dim(opt_rfm)
dim(tau_rfm)
tau_rfm[75,]
opt_rfm[75,]
opt_rfm[75,]/D
p_s      = rfm_lni2s(p)#
	y_s      = rfm_i2s(y)#
	tabs_s   = rfm_i2s(tabs)#
	coo2d_s  = rfm_i2s(coo2d)#
	opt_s    = rfm_lni2s(opt)
dim(opt_s)
opt_s_rfm = coarse_grain(opt_s,ncoarse)
opt_s_rfm[75,]
lntau2d_s= log(opt_s)
lntau   = log(ncvar_get(nc,"opt")[,1:(np-1)])
dim(lntau)
lntau_rfm = coarse_grain(lntau,ncoarse)   # no D. Coarse grain after ln!
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
dim(lntau_theory)
dim(k_fit)
length(k_fit)
dim(lntau_rfm)
p_ve
p_vec
image.plot(k_fit,p,lntau_theory)
image.plot(k_fit,p[p_vec],lntau_theory[ ,p_vec])
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
image.plot(k_fit,p[p_vec],lntau_theory[ ,p_vec])
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
dev.off()
dev.off()
plot_tau(k_coarse,p,lntau_rfm,paste(gas," lntau, RFM",sep=""))
plot_tau(k_fit,p,lntau_theory,paste(gas," lntau, theory",sep=""))
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
plot_tau(k_coarse,p,lntau_rfm,paste(gas," lntau, RFM",sep=""),p1_rfm)
p1_rfm
p_vec
plim
plot_tau(k_coarse,p,lntau_rfm,paste(gas," lntau, RFM",sep=""),p1_rfm)
lntau_rfm[ 75, ]
p
lntau_rfm[ 75, p_vec]
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
p1_rfm
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
min(k)
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
min(k)
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
gas
gas="co2"
band_data_gas = band_data[[gas]]
P_data        = band_data_gas[[1]]#
			R_data        = band_data_gas[[2]]#
			k_fit_P       = P_data$k_fit
k_fit_P
k_P  	      = min(k_fit_P)#
			kappa_rot     = max(rot_data$kappa_fit)
k_p
k_P
k_Q  	      = max(k_fit_P)
k_Q
P_data        = band_data_gas[[1]]#
			R_data        = band_data_gas[[2]]#
			k_fit_P       = P_data$k_fit#
			k_P  	      = max(k_fit_P)#
			kappa_P       = max(P_data$kappa_fit)#
			l_P  	      = P_data$lk#
			k_fit_R       = R_data$k_fit#
			k_R	          = min(k_fit_R)#
			kappa_R       = max(R_data$kappa_fit)#
			l_R  	      = R_data$lk
k_p
k_P
k_R
k_Q			  = mean(k_P,k_R)#
			l_Q	  	 	  = mean(l_P,l_R)
l_P
l_R
l_Q
k_Q			  = mean(c(k_P,k_R))#
			l_Q	  	 	  = mean(c(l_P,l_R))
k_Q
l_R
l_Q
k_fit   	  = c(k_fit_P,k_fit_R[-1])#
			nk_fit	      = length(k_fit)
k_fit
kappa_P
kappa_Q
kappa_R
kappa_Q		  = mean(c(kappa_P,kappa_R))
kappa_Q
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
plot_tau(k_coarse,p,lntau_rfm,paste(gas," lntau, RFM",sep=""),p1_rfm)
plot_tau(k_fit,p,lntau_theory,paste(gas," lntau, theory",sep=""),p1_theory)#
}
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
i=1
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
load("~/Dropbox/17rad_cooling2/data/band_data.Rdata")  # includes ncoarse
source("/Users/nadir/Dropbox/17rad_cooling2/src/get_band_params.R")
rm(list=ls())
source("/Users/nadir/Dropbox/17rad_cooling2/src/plot_tau_rfm_theory.R")
ls()
rm(list=ls())
load("~/Dropbox/17rad_coolings/data/band_params.Rdata")
load("~/Dropbox/17rad_cooling2/data/band_params.Rdata")
ls()
rm(list=ls())
ls()
load("~/Dropbox/17rad_cooling2/data/band_data.Rdata")  # includes ncoarse
ls()
source("/Users/nadir/Dropbox/17rad_cooling2/src/get_band_params.R")
ls()
